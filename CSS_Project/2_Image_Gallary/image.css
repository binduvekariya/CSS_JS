* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* It is used when we are given padding and border.. content of box is become small rather than change the size of box. */
}

#wrapper {
    height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
}

.container {
    height: 100%;
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

.container h1 {
    margin: 20px 0;
    text-align: center;
    /* margin-bottom: 20px; */
    font-size: 3rem;
}

.gallary {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.card {
    width: 32%;
    position: relative;   
    /* We need that figcaption is overlap with image, so that's why we are use relative positioning. */
    margin-bottom: 20px;
    border-radius: 10px;
    overflow: hidden;
}

.card img {
    height: 100%;
    width: 100%;
    /* Here, width is set according to its parent element which is (card). */
    filter:grayscale(100%);
    box-shadow: 0 0 20px #333;
    object-position: center;
    object-fit: cover;
}

.card:hover {
    transform: scale(1.03);
    filter: drop-shadow(0 0 10px #333);
    transition: 0.3s;
}

.card img:hover {
    filter: grayscale(0%);
}

.card figcaption {
    position: absolute;
    bottom: 0;
    left: 0;
    padding: 25px;
    height: 20%;
    width: 100%;
    font-size: 16px;
    font-weight: 500;
    color: white;
    opacity: 0;
    /* Transparency is invisible. */
    border-radius: 0 0 10px 10px;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.5) 0%, rgba(255, 255, 255, 0) 100%);
    transition: 0.3s;
}

.card:hover figcaption {
    opacity: 1;
    transform: scale(1.03);
}